# -*- coding: utf-8 -*-
"""central tendency and dispersion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qJvZnzQ4Murh9M5e9GQiXHDr_TKWzI1z
"""

import pandas as pd
ds = pd.read_csv("/content/drive/MyDrive/dress_rental_prices.csv")

ds.shape

ds.columns

ds.head()

ds['Brand']

ds['Price'].mean()

# Commented out IPython magic to ensure Python compatibility.
import matplotlib
import matplotlib.pyplot as plt
# %matplotlib inline
plt.figure(figsize=(15,5))
x=range(ds['Price'].size)
y=ds['Price']
plt.scatter(x,y, marker='o',s=0.7)

plt.title('Price')
plt.xlabel('Id of Idividual')
plt.ylabel('Price')
# plot the estimate line
x_c, y_c = ([0, 6000], [155, 155])
plt.plot(x_c, y_c, color='black', linewidth=0.75)

# plot the estimate line
x_c, y_c = ([0, 6000], [ds['Price'].mean(),ds['Price'].mean()])
plt.plot(x_c, y_c, color='green', linewidth=1.5)


plt.show()

vl=ds['Price']
vl.max()

vl.min()

vl.median()

q1=vl.quantile(0.25)
print(q1)

q3=vl.quantile(0.75)
print(q3)

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sns
import matplotlib
import matplotlib.pyplot as plt
# %matplotlib inline
plt.figure(figsize=(8, 6))
sns.boxplot(x=ds['Price'])

plt.show()

import numpy as np
#VARIANCE
var=np.var(ds['Price'])
print(var)

import numpy as np
sta_dev=np.sqrt(var)
print(sta_dev)

cv=(sta_dev/ds['Price'].mean())*100
print(cv)

# Calculate Q1 and Q3
Q1 = ds['Price'].quantile(0.25)
Q3 = ds['Price'].quantile(0.75)
IQR = Q3 - Q1
print(IQR)

# Determine outliers
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

# Remove outliers
df_filtered = [(ds['Price'] >= lower_bound) & (ds['Price'] <= upper_bound)]

print("Outliers")
print(df_filtered)

#Plot a graph that show outliers
plt.scatter(ds['Price'].index,ds['Price'])
plt.title('Graph that represent Outliers')
plt.xlabel('Id of Individual')
plt.ylabel('Price')
plt.show()

#Dispersion
mean_value = ds['Price'].mean()
std_dev_value = ds['Price'].std()

#Create the histogram
plt.figure(figsize=(10, 6))
sns.histplot(ds['Price'], bins=30, kde=False, color='black')

# Add mean and standard deviation lines
plt.axvline(mean_value, color='green', linestyle='solid', linewidth=1.5)
plt.axvline(mean_value + std_dev_value, color='yellow', linestyle='solid', linewidth=1.2)
plt.axvline(mean_value - std_dev_value, color='yellow', linestyle='solid', linewidth=1.2)

plt.title('Histogram with Mean and Standard Deviation Lines')
plt.xlabel('Price')
plt.ylabel('Freq')
plt.show()